import React, { useEffect, useState } from "react";
import { gql, useQuery } from "@apollo/client"; // Ensure you have Apollo Client set up
import Analytictwo from "./Analytictwo";

const ANALYTICS_QUERY = gql`
  query GlAdmin {
    glAdmin {
      RevenueChartData {
        ... on ChartDataResponseType {
          status
          datasets {
            customerType
            data {
              month
              amount
            }
          }
          summary {
            customerType
            total
            percentage
          }
        }
        ... on ChartDataError {
          message
        }
      }
    }
  }
`;

const Analytic = () => {
  const { data, loading, error } = useQuery(ANALYTICS_QUERY);
  const [chartData, setChartData] = useState(null);

  useEffect(() => {
    if (data && data.glAdmin.RevenueChartData) {
      const datasets = data.glAdmin.RevenueChartData.datasets;

      // Filter datasets to only include "Enterprise" and "Individuals"
      const filteredDatasets = datasets.filter(dataset => 
        dataset.customerType === "Enterprise" || dataset.customerType === "Individuals"
      );

      const labels = filteredDatasets[0]?.data.map(item => item.month) || [];

      const formattedData = {
        labels,
        datasets: filteredDatasets.map(dataset => ({
          label: dataset.customerType,
          data: dataset.data.map(item => item.amount),
          borderColor: dataset.customerType === "Enterprise" ? "#883DCF" : "#00DDEB",
          backgroundColor: dataset.customerType === "Enterprise" ? "rgba(136, 61, 207, 0.2)" : "rgba(0, 221, 235, 0.2)",
          pointRadius: 0,
          tension: 0.4,
        })),
      };

      setChartData(formattedData);
    }
  }, [data]);

  if (loading) return <p>Loading...</p>;
  if (error) return <p>Error: {error.message}</p>;

  return (
    <div
      className="h-[410px] p-5 bg-[#FFFFFF] rounded-xl"
      style={{
        boxShadow: "0px 4px 30px 0px #2E2D740D",
      }}
    >
      <div className="flex justify-between items-center w-full">
        <p className="text-[#22173D] text-2xl font-semibold">
          Revenue Generated
        </p>
        <button className="text-[#883DCF] bg-[#FAF5FF] rounded-[4px] px-3 h-[28px] flex items-center gap-1 font-semibold text-xs">
          Monthly
        </button>
      </div>
      <div className="flex justify-between items-center w-full mt-3">
        <p className="text-[#858D9D] font-normal">
          Total revenue generated by the customers
        </p>
        <div className="flex items-center gap-3">
          <div className="flex items-center gap-1">
            <div className="w-[12px] h-[12px] rounded-full bg-[#9854FF]" />
            <p className="text-[#64748B] font-normal text-xs">Enterprise</p>
          </div>
          <div className="flex items-center gap-1">
            <div className="w-[12px] h-[12px] rounded-full bg-[#00DDEB]" />
            <p className="text-[#64748B] font-normal text-xs">Individuals</p>
          </div>
        </div>
      </div>
      <Analytictwo chartData={chartData} />
    </div>
  );
};

export default Analytic;
